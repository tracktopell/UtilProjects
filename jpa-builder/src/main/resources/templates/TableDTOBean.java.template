
package ${tablebean.package};

import java.io.Serializable;
import java.util.Set;
import java.util.MissingFormatArgumentException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;


/**
 * Class for mapping DTO Entity of Table ${tablebean.name}.
 * 
 * @author Tracktopell::jpa-builder @see  https://github.com/tracktopell/UtilProjects/tree/master/jpa-builder
 * @version 0.10.9
 * @date ${date}
 */

public class ${tablebean.declaredName} implements java.io.Serializable {
    private static final long serialVersionUID = ${tablebean.serialId};
    %foreach tablebean.member in ${tablebean.members}
    ${tablebean.member.javadocCommnet}    
    ${tablebean.member.declaration}
    %endfor

    /** 
     * Default Constructor
     */
    public ${tablebean.declaredName}() {
    }

    /** 
     * lazy Constructor just with IDs
     */
    public ${tablebean.declaredName}( ${tablebean.PKMembersParameters} ) {
        ${tablebean.PKMembersParametersInitCode}
    }
    
    /**
     * Getters and Setters
     */
    %foreach tablebean.member in ${tablebean.members}
    ${tablebean.member.getter}

    ${tablebean.member.setter}    

    %endfor

    @Override
    public int hashCode() {
        int hash = 0;
		// bug ?
        hash = ${tablebean.hashCodeSumCode};
        return hash;
    }

    public boolean equals(Object o){

        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(o instanceof ${tablebean.declaredName})) {
            return false;
        }

    	${tablebean.declaredName} other = (${tablebean.declaredName} ) o;
    	${tablebean.equalsCode}

    	return true;
    }

    @Override
    public String toString() {
        return ${tablebean.toStringCode};
    }

    @Override
    public int hashCode() {
        int hash = 0;
        %foreach tablebean.member in ${tablebean.members}		
		hash += String.valueOf(${tablebean.member.javaIdentifier}).hashCode();
		%endfor
        return hash;
    }

	@Override
    public boolean equals(Object o){
		if (this == o) {
			return true;
		}
		if (o == null) {
			return false;
		}
		if (getClass() != o.getClass()) {
			return false;
		}        
        if (!(o instanceof ${tablebean.declaredName}DTO)) {
            return false;
        }		
		${tablebean.declaredName}DTO  other = (${tablebean.declaredName}DTO ) o;
		%foreach tablebean.member in ${tablebean.members}	
		if (!Objects.equals(this.${tablebean.member.javaIdentifier}, other.${tablebean.member.javaIdentifier})) { return false; }		
		%endfor
    	return true;
    }

    @Override
    public String toString() {
		StringBuilder sb=new StringBuilder();
		sb.append("${tablebean.declaredName}DTO{");
		%foreach tablebean.member in ${tablebean.members}		
		sb.append("${tablebean.member.javaIdentifier}" ).append("=").append(${tablebean.member.javaIdentifier}).append("|");
		%endfor
		sb.append("serialVersionUID=").append(serialVersionUID).append("}");
		return sb.toString();
    }

}
