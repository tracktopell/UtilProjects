
package ${tablebean.package};

import java.io.Serializable;
import java.util.Set;
import java.util.MissingFormatArgumentException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;


/**
 * Class for mapping DTO Entity of Table ${tablebean.name}.
 * 
 * @author Tracktopell::jpa-builder @see  https://github.com/tracktopell/UtilProjects/tree/master/jpa-builder
 * @date ${date}
 */

public class ${tablebean.declaredName} implements java.io.Serializable {
    private static final long serialVersionUID = ${tablebean.serialId};
    %foreach tablebean.member in ${tablebean.members}
    ${tablebean.member.javadocCommnet}    
    ${tablebean.member.declaration}
    %endfor

    /** 
     * Default Constructor
     */
    public ${tablebean.declaredName}() {
    }

    /** 
     * lazy Constructor just with IDs
     */
    public ${tablebean.declaredName}( ${tablebean.PKMembersParameters} ) {
        ${tablebean.PKMembersParametersInitCode}
    }
    
    /**
     * Getters and Setters
     */
    %foreach tablebean.member in ${tablebean.members}
    ${tablebean.member.getter}

    ${tablebean.member.setter}    

    %endfor

    @Override
    public int hashCode() {
        int hash = 0;
		// bug ?
        hash = ${tablebean.hashCodeSumCode};
        return hash;
    }

    public boolean equals(Object o){

        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(o instanceof ${tablebean.declaredName})) {
            return false;
        }

    	${tablebean.equalsCode}

    	return true;
    }

    @Override
    public String toString() {
        return ${tablebean.toStringCode};
    }

	private static final SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdddHHmmss");
	private static final DecimalFormat    df  = new DecimalFormat("0.000000");
	private static final DecimalFormat    cur = new DecimalFormat("0.00");

	public String printPlainSeparated(String s){
		String ser=null;
		StringBuffer sb= new StringBuffer();

		${tablebean.serializeCode}
		return ser;
	}

	public void scanFrom(String src, String s) throws MissingFormatArgumentException{
		String srcSpplited[] = src.split(s);
		int nf=0;
		try {			
			${tablebean.scanCode}
		}catch(Exception e){
			throw new MissingFormatArgumentException("Exception scanning for["+nf+"] from string ->"+srcSpplited[nf]+"<-");
		}
	}

}
