
package ${tablebean.package};

import java.io.Serializable;
import java.util.Set;
import java.util.Collection;
import java.util.Collection;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Embeddable;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.EmbeddedId;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.JoinTable;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Class for mapping JPA Entity of Table ${tablebean.name}.
 * 
 * @author Tracktopell::jpa-builder @see  https://github.com/tracktopell/UtilProjects/tree/master/jpa-builder
 * @version 0.8.5
 * @date ${date}
 */



${tablebean.jpa_entity_or_embeddeable}
${tablebean.jpa_talbe}
public class ${tablebean.declaredName} implements java.io.Serializable {
    private static final long serialVersionUID = ${tablebean.serialId};
    %foreach tablebean.member in ${tablebean.members}
    ${tablebean.member.javadocCommnet}    
    ${tablebean.member.declaration}
    %endfor
    ${tablebean.oneToManyRelations.declarations}
    ${tablebean.ManyToManyRelations.declarations}

    /** 
     * Default Constructor
     */
    public ${tablebean.declaredName}() {
    }

    /** 
     * lazy Constructor just with IDs
     */
    public ${tablebean.declaredName}( ${tablebean.PKMembersParameters} ) {
        ${tablebean.PKMembersParametersInitCode}
    }
    
    /**
     * Getters and Setters
     */
    %foreach tablebean.member in ${tablebean.members}
    ${tablebean.member.getter}

    ${tablebean.member.setter}    

    %endfor
    ${tablebean.oneToManyRelations.gettersAndSetters}
    ${tablebean.ManyToManyRelations.gettersAndSetters}

    @Override
    public int hashCode() {
        int hash = 0;
        hash = ${tablebean.hashCodeSumCode};
        return hash;
    }

    public boolean equals(Object o){

        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(o instanceof ${tablebean.declaredName})) {
            return false;
        }

    	${tablebean.equalsCode}

    	return true;
    }

    @Override
    public String toString() {
        return ${tablebean.toStringCode};
    }

}
